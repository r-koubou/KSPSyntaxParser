plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the kotlin plugin to add support for Kotlin
    id "org.jetbrains.kotlin.jvm" version "1.3.41"

    // Apply the application plugin to add support for building a CLI application
    id 'application'

    // The ANTLR plugin
    // See: https://docs.gradle.org/current/userguide/antlr_plugin.html
    // Ja : http://gradle.monochromeroad.com/docs/userguide/antlr_plugin.html
    id "antlr"

    // A Gradle plugin for collapsing all dependencies and project code into a single Jar file.
    id "com.github.johnrengelman.shadow" version "5.1.0"

}

version '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // https://mvnrepository.com/artifact/org.antlr/antlr4
    antlr group: 'org.antlr', name: 'antlr4', version: '4.7.2'

    // https://mvnrepository.com/artifact/args4j/args4j
    compile group: 'args4j', name: 'args4j', version: '2.33'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    main{
        kotlin {
            // Referece to Java classes
            srcDirs += 'src/main/generated/antlr'
        }
        java {
            srcDirs += 'src/main/generated/antlr'
        }
    }
}

// ANTLR
generateGrammarSource {
    outputDirectory = file('src/main/generated/antlr/net/rkoubou/kspcompiler/generated/antlr')
    arguments << '-package' << 'net.rkoubou.kspcompiler.generated.antlr'

// If edting on IntelliJ IDEA, use following
// It will be solved which *.g4 files refernces
/*
    arguments << '-lib' << 'src/main/generated/antlr/net/rkoubou/kspcompiler/generated/antlr'
    copy {
        from outputDirectory
        into 'src/main/antlr'
        include '*.tokens'
    }
*/
}

application {
    mainClassName = 'net.rkoubou.kspcompiler.KSPCompiler'
}

run {
    if(project.hasProperty( 'args' ) )
    {
        args project.args.split( '\\s+' )
    }
}

shadowJar {
    archiveName = "${baseName}.${extension}" // use default jar file name.
}
